name: Build, Test & Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up the JDK (Temurin 24 in this case)
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '24'

      - name: Install Maven
        run: |
            sudo apt-get install -y docker docker-compose
      # Build the project (using Maven; adjust if you use Gradle)
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # Start the Docker Compose services
      - name: Start Docker Compose services
        run: docker-compose up -d

      # Wait for the API endpoint to be healthy
      - name: Wait for API to be healthy
        run: |
          # Try up to 30 times (with a 2-second interval) to check if the API is responding
          for i in {1..30}; do
            if curl --silent --fail http://localhost:8080/api/v1/student; then
              echo "API is up and running!"
              exit 0
            fi
            echo "Waiting for API startup... ($i/30)"
            sleep 2
          done
          echo "API did not start in time."
          exit 1

      # Shut down the Docker Compose services
      - name: Shut down Docker Compose
        if: always()
        run: docker-compose down
